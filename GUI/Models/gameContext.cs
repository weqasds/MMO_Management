// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GUI.Models;

public partial class gameContext : DbContext
{
    public gameContext(DbContextOptions<gameContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AdminEntity> AdminEntities { get; set; }

    public virtual DbSet<BagEntity> BagEntities { get; set; }

    public virtual DbSet<CharacterEntity> CharacterEntities { get; set; }

    public virtual DbSet<CharacterEquipEntity> CharacterEquipEntities { get; set; }

    public virtual DbSet<PlayerBehaviorEntity> PlayerBehaviorEntities { get; set; }

    public virtual DbSet<PlayerCharacter> PlayerCharacters { get; set; }

    public virtual DbSet<PlayerInfoEntity> PlayerInfoEntities { get; set; }

    public virtual DbSet<ShopInfoEntity> ShopInfoEntities { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<AdminEntity>(entity =>
        {
            entity.HasKey(e => e.AdminId).HasName("PRIMARY");

            entity.ToTable("admin_entity");

            entity.Property(e => e.AdminId).HasColumnName("admin_id");
            entity.Property(e => e.AdminAccount)
                .HasMaxLength(255)
                .HasColumnName("admin_account");
            entity.Property(e => e.AdminLevel).HasColumnName("admin_level");
            entity.Property(e => e.AdminPassword)
                .HasMaxLength(255)
                .HasColumnName("admin_password");
        });

        modelBuilder.Entity<BagEntity>(entity =>
        {
            entity.HasKey(e => e.BagId).HasName("PRIMARY");

            entity.ToTable("bag_entity");

            entity.Property(e => e.BagId).HasColumnName("bag_id");
            entity.Property(e => e.BagData)
                .HasMaxLength(255)
                .HasColumnName("bag_data");
            entity.Property(e => e.Capacity).HasColumnName("capacity");
        });

        modelBuilder.Entity<CharacterEntity>(entity =>
        {
            entity.HasKey(e => new { e.PlayerId, e.CharacterId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("character_entity");

            entity.HasIndex(e => e.BagId, "bag_id");

            entity.HasIndex(e => e.CharacterId, "character_id");

            entity.HasIndex(e => e.EquipId, "equip_id");

            entity.HasIndex(e => e.PlayerId, "player_id");

            entity.Property(e => e.PlayerId).HasColumnName("player_id");
            entity.Property(e => e.CharacterId).HasColumnName("character_id");
            entity.Property(e => e.Attack).HasColumnName("attack");
            entity.Property(e => e.BagId).HasColumnName("bag_id");
            entity.Property(e => e.EquipId).HasColumnName("equip_id");
            entity.Property(e => e.EquipName)
                .HasMaxLength(255)
                .HasColumnName("equip_name");
            entity.Property(e => e.Exp).HasColumnName("exp");
            entity.Property(e => e.Gender).HasColumnName("gender");
            entity.Property(e => e.HashId)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("hash_id");
            entity.Property(e => e.Hp).HasColumnName("hp");
            entity.Property(e => e.PhysicalResist).HasColumnName("physical_resist");
            entity.Property(e => e.Profession)
                .HasMaxLength(255)
                .HasColumnName("profession");

            entity.HasOne(d => d.Bag).WithMany(p => p.CharacterEntities)
                .HasForeignKey(d => d.BagId)
                .HasConstraintName("character_entity_ibfk_1");

            entity.HasOne(d => d.Equip).WithMany(p => p.CharacterEntities)
                .HasForeignKey(d => d.EquipId)
                .HasConstraintName("character_entity_ibfk_2");
        });

        modelBuilder.Entity<CharacterEquipEntity>(entity =>
        {
            entity.HasKey(e => e.EquipId).HasName("PRIMARY");

            entity.ToTable("character_equip_entity");

            entity.Property(e => e.EquipId).HasColumnName("equip_id");
            entity.Property(e => e.Attack).HasColumnName("attack");
            entity.Property(e => e.Def).HasColumnName("def");
            entity.Property(e => e.EquipName)
                .HasMaxLength(255)
                .HasColumnName("equip_name");
            entity.Property(e => e.EquipType)
                .HasMaxLength(255)
                .HasColumnName("equip_type");
            entity.Property(e => e.Hp).HasColumnName("hp");
            entity.Property(e => e.PhysResist).HasColumnName("phys_resist");
        });

        modelBuilder.Entity<PlayerBehaviorEntity>(entity =>
        {
            entity.HasKey(e => e.PlayerId).HasName("PRIMARY");

            entity.ToTable("player_behavior_entity");

            entity.Property(e => e.PlayerId).HasColumnName("player_id");
            entity.Property(e => e.BehaviorDetail)
                .HasMaxLength(255)
                .HasColumnName("behavior_detail");
            entity.Property(e => e.BehaviorTime)
                .HasColumnType("datetime")
                .HasColumnName("behavior_time");
            entity.Property(e => e.BehaviorType).HasColumnName("behavior_type");
        });

        modelBuilder.Entity<PlayerCharacter>(entity =>
        {
            entity.HasKey(e => new { e.PlayerId, e.CharacterId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("player_character");

            entity.HasIndex(e => e.CharacterId, "character_id");

            entity.Property(e => e.PlayerId).HasColumnName("player_id");
            entity.Property(e => e.CharacterId).HasColumnName("character_id");
        });

        modelBuilder.Entity<PlayerInfoEntity>(entity =>
        {
            entity.HasKey(e => new { e.PlayerId, e.CharacterId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("player_info_entity");

            entity.HasIndex(e => e.CharacterId, "character_id");

            entity.HasIndex(e => e.PlayerId, "player_id");

            entity.Property(e => e.PlayerId).HasColumnName("player_id");
            entity.Property(e => e.CharacterId).HasColumnName("character_id");
            entity.Property(e => e.Account)
                .HasMaxLength(255)
                .HasColumnName("account");
            entity.Property(e => e.Age).HasColumnName("age");
            entity.Property(e => e.Gender).HasColumnName("gender");
            entity.Property(e => e.Nickname)
                .HasMaxLength(255)
                .HasColumnName("nickname");
        });

        modelBuilder.Entity<ShopInfoEntity>(entity =>
        {
            entity.HasKey(e => e.ItemId).HasName("PRIMARY");

            entity.ToTable("shop_info_entity");

            entity.Property(e => e.ItemId).HasColumnName("item_id");
            entity.Property(e => e.ItemCost).HasColumnName("item_cost");
            entity.Property(e => e.ItemDescription)
                .HasMaxLength(255)
                .HasColumnName("item_description");
            entity.Property(e => e.ItemName)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("item_name");
            entity.Property(e => e.ItemNum).HasColumnName("item_num");

            entity.HasOne(d => d.Item).WithOne(p => p.ShopInfoEntity)
                .HasForeignKey<ShopInfoEntity>(d => d.ItemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("shop_info_entity_ibfk_1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}